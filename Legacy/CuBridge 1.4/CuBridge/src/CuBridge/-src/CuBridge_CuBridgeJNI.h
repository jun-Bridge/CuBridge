/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class CuBridge_CuBridgeJNI */

#ifndef _Included_CuBridge_CuBridgeJNI
#define _Included_CuBridge_CuBridgeJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    init
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_CuBridge_CuBridgeJNI_init
  (JNIEnv *, jclass, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    refresh
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_CuBridge_CuBridgeJNI_refresh
  (JNIEnv *, jclass);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    setAuto
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_CuBridge_CuBridgeJNI_setAuto
  (JNIEnv *, jclass);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    setCAL
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_CuBridge_CuBridgeJNI_setCAL
  (JNIEnv *, jclass, jboolean);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    getCAL
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_getCAL
  (JNIEnv *, jclass);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    getENV
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_getENV
  (JNIEnv *, jclass);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    getSysInfo
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_CuBridge_CuBridgeJNI_getSysInfo
  (JNIEnv *, jclass);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    clear
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_CuBridge_CuBridgeJNI_clear
  (JNIEnv *, jclass);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    bufferClean
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_CuBridge_CuBridgeJNI_bufferClean
  (JNIEnv *, jclass);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    visualQueueAll
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_CuBridge_CuBridgeJNI_visualQueueAll
  (JNIEnv *, jclass);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    visualQueue
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_CuBridge_CuBridgeJNI_visualQueue
  (JNIEnv *, jclass);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    visualBufferAll
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_CuBridge_CuBridgeJNI_visualBufferAll
  (JNIEnv *, jclass);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    visualBuffer
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_CuBridge_CuBridgeJNI_visualBuffer
  (JNIEnv *, jclass);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    put
 * Signature: ([F[IIIILjava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_put
  (JNIEnv *, jclass, jfloatArray, jintArray, jint, jint, jint, jstring, jboolean);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    pop
 * Signature: (Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_pop
  (JNIEnv *, jclass, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    getData
 * Signature: (Ljava/lang/String;)[F
 */
JNIEXPORT jfloatArray JNICALL Java_CuBridge_CuBridgeJNI_getData
  (JNIEnv *, jclass, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    getShape
 * Signature: (Ljava/lang/String;)[I
 */
JNIEXPORT jintArray JNICALL Java_CuBridge_CuBridgeJNI_getShape
  (JNIEnv *, jclass, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    duple
 * Signature: (Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_duple
  (JNIEnv *, jclass, jstring, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    broad
 * Signature: (Ljava/lang/String;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_broad
  (JNIEnv *, jclass, jstring, jboolean);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    reshape
 * Signature: (Ljava/lang/String;[II)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_reshape
  (JNIEnv *, jclass, jstring, jintArray, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    abs
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_abs
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    neg
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_neg
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    square
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_square
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    sqrt
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_sqrt
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    log
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_log
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    log2
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_log2
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    ln
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_ln
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    reciprocal
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_reciprocal
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    sin
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_sin
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    cos
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_cos
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    tan
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_tan
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    step
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_step
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    sigmoid
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_sigmoid
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    tanh
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_tanh
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    ReLu
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_ReLu
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    leakReLu
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_leakReLu
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    softplus
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_softplus
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    exp
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_exp
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    round
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_round
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    ceil
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_ceil
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    floor
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_floor
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    not
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_not
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    deg2rad
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_deg2rad
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    rad2deg
 * Signature: (Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_rad2deg
  (JNIEnv *, jclass, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    add
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_add
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    sub
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_sub
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    mul
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_mul
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    div
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_div
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    pow
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_pow
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    mod
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_mod
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    gt
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_gt
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    lt
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_lt
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    ge
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_ge
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    le
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_le
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    eq
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_eq
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    ne
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_ne
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    and
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_and
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    or
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_or
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    sum
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_sum
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    mean
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_mean
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    var
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_var
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    std
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_std
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    max
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_max
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    min
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_min
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    accumulate
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_accumulate
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    compress
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_compress
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    expand
 * Signature: (Ljava/lang/String;Ljava/lang/String;II)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_expand
  (JNIEnv *, jclass, jstring, jstring, jint, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    argMax
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_argMax
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    argMin
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_argMin
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    axisMax
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_axisMax
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    axisMin
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_axisMin
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    transpose
 * Signature: (Ljava/lang/String;Ljava/lang/String;II)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_transpose
  (JNIEnv *, jclass, jstring, jstring, jint, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    dot
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_dot
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    matmul
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_matmul
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    affine
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_affine
  (JNIEnv *, jclass, jstring, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    softmax
 * Signature: (Ljava/lang/String;Ljava/lang/String;I)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_softmax
  (JNIEnv *, jclass, jstring, jstring, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    mse
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_mse
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    cee
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_cee
  (JNIEnv *, jclass, jstring, jstring, jstring);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    im2col1D
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;II)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_im2col1D
  (JNIEnv *, jclass, jstring, jstring, jstring, jint, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    col2im1D
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;III)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_col2im1D
  (JNIEnv *, jclass, jstring, jstring, jstring, jint, jint, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    im2col2D
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IIII)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_im2col2D
  (JNIEnv *, jclass, jstring, jstring, jstring, jint, jint, jint, jint);

/*
 * Class:     CuBridge_CuBridgeJNI
 * Method:    col2im2D
 * Signature: (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IIIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_CuBridge_CuBridgeJNI_col2im2D
  (JNIEnv *, jclass, jstring, jstring, jstring, jint, jint, jint, jint, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
